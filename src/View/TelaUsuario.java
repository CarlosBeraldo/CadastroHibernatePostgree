/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import DAO.DAOClientes;
import DAO.DAOContatoCliente;
import Model.Clientes;
import Model.ContatoCliente;
import Model.Usuario;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import org.jdesktop.observablecollections.ObservableCollections;

/**
 *
 * @author Carlos
 */
public class TelaUsuario extends javax.swing.JFrame implements ActionListener{

    private DAOClientes dc;
    private DAOContatoCliente dcc;
    private TelaCadastrarCliente tcc;
    private TelaContato tc;
    private TelaMostrarContato tm;
    private TelaEditarCliente tec;
    
    public TelaUsuario() {
        initComponents();
        dc = new DAOClientes();
        dcc = new DAOContatoCliente();
        atualizar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        listaCliente = ObservableCollections.observableList(new ArrayList<Clientes>());
        jPanel1 = new javax.swing.JPanel();
        botaoAdicionarCliente = new javax.swing.JButton();
        botaoAtualizar = new javax.swing.JButton();
        botaoRemoverCliente = new javax.swing.JButton();
        botaoAdicionarContato = new javax.swing.JButton();
        botaoMostrarContato = new javax.swing.JButton();
        textoTeste = new javax.swing.JTextField();
        editarContato = new javax.swing.JButton();
        tabelamostraClientes = new javax.swing.JScrollPane();
        tabelaListaClientes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        botaoAdicionarCliente.setText("Adiconar Cliente");
        botaoAdicionarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAdicionarClienteActionPerformed(evt);
            }
        });

        botaoAtualizar.setText("Atualizar");
        botaoAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAtualizarActionPerformed(evt);
            }
        });

        botaoRemoverCliente.setText("Remover Cliente");
        botaoRemoverCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRemoverClienteActionPerformed(evt);
            }
        });

        botaoAdicionarContato.setText("Adicionar Contato");
        botaoAdicionarContato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAdicionarContatoActionPerformed(evt);
            }
        });

        botaoMostrarContato.setText("Mostrar Contato");
        botaoMostrarContato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoMostrarContatoActionPerformed(evt);
            }
        });

        textoTeste.setEditable(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tabelaListaClientes, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.nomeFantasia}"), textoTeste, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        editarContato.setText("Editar Cliente");
        editarContato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarContatoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(botaoAdicionarCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botaoAdicionarContato, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(botaoRemoverCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoAtualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(botaoMostrarContato)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editarContato, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(textoTeste))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoAdicionarCliente)
                    .addComponent(botaoAtualizar)
                    .addComponent(botaoRemoverCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoAdicionarContato)
                    .addComponent(botaoMostrarContato)
                    .addComponent(editarContato))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(textoTeste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listaCliente, tabelaListaClientes);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nomeFantasia}"));
        columnBinding.setColumnName("Nome Fantasia");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${razaoSocial}"));
        columnBinding.setColumnName("Razao Social");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        tabelamostraClientes.setViewportView(tabelaListaClientes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tabelamostraClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(tabelamostraClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAtualizarActionPerformed
        atualizar();
    }//GEN-LAST:event_botaoAtualizarActionPerformed

    private void botaoRemoverClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRemoverClienteActionPerformed
      
            if(tabelaListaClientes.getSelectedRowCount()==1){
                 if(JOptionPane.showConfirmDialog(this, "Deseja Realmente remover!?","Confirmação",
                JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION){
                int idTemporario = tabelaListaClientes.getSelectedRow();
                Clientes cli = listaCliente.get(idTemporario);
                dc.remover(cli);
                listaCliente.remove(cli);
                JOptionPane.showMessageDialog(this, "Removido com sucesso");
            }
        }
            else{
                JOptionPane.showMessageDialog(this, "Selecione um cliente da tabela");
            }
    }//GEN-LAST:event_botaoRemoverClienteActionPerformed

    private void botaoAdicionarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAdicionarClienteActionPerformed
       
       tcc = new TelaCadastrarCliente(this);
       tcc.setLocationRelativeTo(null);
       tcc.setTitle("TELA CADASTRAR CLIENTE");
       tcc.setContatoCliente(new ContatoCliente());
       tcc.setCliente(new Clientes());
       tcc.setVisible(true);
    }//GEN-LAST:event_botaoAdicionarClienteActionPerformed

    private void botaoAdicionarContatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAdicionarContatoActionPerformed

        if(tabelaListaClientes.getSelectedRowCount()==1){
            int idTemporario = tabelaListaClientes.getSelectedRow();
            Clientes cli = listaCliente.get(idTemporario);
            tc = new TelaContato(this);
            tc.setTitle("TELA ADICIONAR CONTATO");
            tc.setLocationRelativeTo(null);
            tc.setContatoCliente(new ContatoCliente());
            tc.setCliente(cli);
            tc.setVisible(true);            
            ;
        }
        else{
            JOptionPane.showMessageDialog(this, "Selecione um cliente da tabela");
        }
        
    }//GEN-LAST:event_botaoAdicionarContatoActionPerformed

    private void botaoMostrarContatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoMostrarContatoActionPerformed
        if(tabelaListaClientes.getSelectedRowCount()==1){
            int idTemporario = tabelaListaClientes.getSelectedRow();
            Clientes cc = listaCliente.get(idTemporario);
            tm = new TelaMostrarContato(this);
            tm.setTitle("TELA MOSTRAR CONTATO");
            tm.setLocationRelativeTo(null);
            tm.atualizar(cc);
            tm.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(this, "Selecione um cliente da tabela");
        }
    }//GEN-LAST:event_botaoMostrarContatoActionPerformed

    private void editarContatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarContatoActionPerformed
        if(tabelaListaClientes.getSelectedRowCount()==1){
            int idTemporario = tabelaListaClientes.getSelectedRow();
            Clientes c = listaCliente.get(idTemporario);
            tec = new TelaEditarCliente(this);
            tec.setLocationRelativeTo(null);
            tec.setCliente(c);
            tec.setVisible(true);
            
        }
    }//GEN-LAST:event_editarContatoActionPerformed

    public void atualizar(){
        listaCliente.clear();
        listaCliente.addAll(dc.getAll());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAdicionarCliente;
    private javax.swing.JButton botaoAdicionarContato;
    private javax.swing.JButton botaoAtualizar;
    private javax.swing.JButton botaoMostrarContato;
    private javax.swing.JButton botaoRemoverCliente;
    private javax.swing.JButton editarContato;
    private javax.swing.JPanel jPanel1;
    private java.util.List<Clientes> listaCliente;
    private javax.swing.JTable tabelaListaClientes;
    private javax.swing.JScrollPane tabelamostraClientes;
    private javax.swing.JTextField textoTeste;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
         if(e.getActionCommand().equals("botaoCancelarCliente")){
            if(tcc != null){
                tcc.dispose();
            }
        }
        if(e.getActionCommand().equals("botaoSalvarCliente")){
            if(tcc != null){
                Clientes client = tcc.getCliente();
                ContatoCliente contactCliente = tcc.getContatoCliente();
                if(client.getNomeFantasia()== null||client.getRazaoSocial()== null||
                    contactCliente.getEmail()== null||contactCliente.getFonte() == null||
                        contactCliente.getNome()== null||contactCliente.getSetor()== null||
                        contactCliente.getTelefone()==null){
                    JOptionPane.showMessageDialog(this, "Campo em branco");
                }
                else{
                    
                    List<ContatoCliente> contatosCliente = new ArrayList<>();
                    contatosCliente.add(contactCliente);
                    client.setContato(contatosCliente); 
                    dc.salvar(client);
                    tcc.dispose();
                    atualizar();
                    JOptionPane.showMessageDialog(this, "Salvo com sucesso");
                }
                
            }
        }
        if(e.getActionCommand().equals("botaoSalvarContato")){
            if(tc != null){
                
                Clientes client = tc.getCliente();
                ContatoCliente contactCliente = tc.getContatoCliente();
                
                if(contactCliente.getEmail()== null||contactCliente.getFonte() == null||
                    contactCliente.getNome()== null||contactCliente.getSetor()== null||
                    contactCliente.getTelefone()==null){
                    
                        JOptionPane.showMessageDialog(this, "Campo em branco");
                }
                else{
                    List<ContatoCliente> contatosCliente = client.getContato();
                    contatosCliente.add(contactCliente);
                    client.setContato(contatosCliente);
                    dc.salvar(client);
                    
                    tc.dispose();
                    atualizar();
                    JOptionPane.showMessageDialog(this, "Salvo com sucesso");
                }
                
            }
        }
        if(e.getActionCommand().equals("botaoCancelarContato")){
            if(tc != null){
                tc.dispose();
            }
        }
        if(e.getActionCommand().equals("botaoVoltar")){
            if(tm != null){
                tm.dispose();
            }
        }
        if(e.getActionCommand().equals("botaoVoltarEdicao")){
            if(tec != null){
                tec.dispose();
            }
        }
        if(e.getActionCommand().equals("botaoEditarCliente")){
            if(tec != null){
                
                Clientes client = tec.getCliente();                
                if(client.getNomeFantasia()== null||client.getRazaoSocial()== null){
                    
                        JOptionPane.showMessageDialog(this, "Campo em branco");
                }
                else{
                    Clientes clients = tec.getCliente();
                    dc.salvar(clients);
                    tec.dispose();
                    atualizar();
                    JOptionPane.showMessageDialog(this, "Salvo com sucesso");
                    
                }
                
            }
        }
        
        
    }
}
